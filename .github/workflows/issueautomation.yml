name: Issue Management Workflow
on:
  issue_comment:
    types: [created]
 
jobs:
  retrieve-issue-details:
    runs-on: ubuntu-latest
    outputs:
      ISSUE_ITEM_ID: ${{ steps.fetch_issue_item_id.outputs.ISSUE_ITEM_ID }}
      PROJECT_GLOBAL_ID: ${{ steps.fetch_project_id.outputs.PROJECT_GLOBAL_ID }}
      STATUS_FIELD_ID: ${{ steps.fetch_status_field.outputs.STATUS_FIELD_ID }}
      IN_PROGRESS_OPTION_ID: ${{ steps.fetch_in_progress_option.outputs.IN_PROGRESS_OPTION_ID }}
      DONE_OPTION_ID: ${{ steps.fetch_done_option.outputs.DONE_OPTION_ID }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
 
      - name: Authenticate GitHub CLI
        run: echo "${{ secrets.TOKEN }}" | gh auth login --with-token
 
      - name: Verify GitHub CLI Authentication
        run: gh auth status
 
      - name: Fetch Project Number
        id: fetch_project_number
        run: |
          PROJECT_NUMBER=$(gh project list --format json | jq -r '.projects[] | select(.title=="test workflow") | .number')
          echo "PROJECT_NUMBER=${PROJECT_NUMBER}" >> $GITHUB_ENV
 
      - name: Fetch Issue URL
        id: fetch_issue_url
        run: |
          ISSUE_URL=$(gh issue view "${{ github.event.issue.number }}" --json url | jq -r '.url')
          echo "ISSUE_URL=${ISSUE_URL}" >> $GITHUB_ENV
 
      - name: Fetch Issue Item ID
        id: fetch_issue_item_id
        run: |
          ISSUE_ITEM_ID=$(gh project item-list ${{ env.PROJECT_NUMBER }} --owner '@me' --format json | jq -r '.items[] | select(.content.number==${{ github.event.issue.number }}) | .id')
          echo "ISSUE_ITEM_ID=${ISSUE_ITEM_ID}" >> $GITHUB_ENV
          echo "ISSUE_ITEM_ID=${ISSUE_ITEM_ID}" >> $GITHUB_OUTPUT
 
      - name: Fetch Status Field ID
        id: fetch_status_field
        run: |
          STATUS_FIELD_ID=$(gh project field-list ${{ env.PROJECT_NUMBER }} --owner "@me" --format json | jq -r '.fields[] | select(.name=="Status") | .id')
          echo "STATUS_FIELD_ID=${STATUS_FIELD_ID}" >> $GITHUB_ENV
          echo "STATUS_FIELD_ID=${STATUS_FIELD_ID}" >> $GITHUB_OUTPUT
 
      - name: Fetch Project Global ID
        id: fetch_project_id
        run: |
          PROJECT_GLOBAL_ID=$(gh project list --format json | jq -r '.projects[] | select(.title=="test workflow") | .id')
          echo "PROJECT_GLOBAL_ID=${PROJECT_GLOBAL_ID}" >> $GITHUB_ENV
          echo "PROJECT_GLOBAL_ID=${PROJECT_GLOBAL_ID}" >> $GITHUB_OUTPUT
 
      - name: Fetch In Progress Option ID
        id: fetch_in_progress_option
        run: |
          IN_PROGRESS_OPTION_ID=$(gh project field-list ${{ env.PROJECT_NUMBER }} --owner "@me" --format json | jq -r '.fields[] | select(.name=="Status") | .options[] | select(.name=="In progress") | .id')
          echo "IN_PROGRESS_OPTION_ID=${IN_PROGRESS_OPTION_ID}" >> $GITHUB_ENV
          echo "IN_PROGRESS_OPTION_ID=${IN_PROGRESS_OPTION_ID}" >> $GITHUB_OUTPUT
 
      - name: Fetch Done Option ID
        id: fetch_done_option
        run: |
          DONE_OPTION_ID=$(gh project field-list ${{ env.PROJECT_NUMBER }} --owner "@me" --format json | jq -r '.fields[] | select(.name=="Status") | .options[] | select(.name=="Done") | .id')
          echo "DONE_OPTION_ID=${DONE_OPTION_ID}" >> $GITHUB_ENV
          echo "DONE_OPTION_ID=${DONE_OPTION_ID}" >> $GITHUB_OUTPUT
 
  update-issue-status:
    runs-on: ubuntu-latest
    needs: retrieve-issue-details
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
 
      - name: Update Issue to In Progress
        if: contains(github.event.comment.body, 'progress')
        run: |
          echo "Setting issue status to In Progress..."
          gh project item-edit \
            --id ${{ needs.retrieve-issue-details.outputs.ISSUE_ITEM_ID }} \
            --field-id ${{ needs.retrieve-issue-details.outputs.STATUS_FIELD_ID }} \
            --project-id ${{ needs.retrieve-issue-details.outputs.PROJECT_GLOBAL_ID }} \
            --single-select-option-id ${{ needs.retrieve-issue-details.outputs.IN_PROGRESS_OPTION_ID }}
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
 
      - name: Update Issue to Done
        if: contains(github.event.comment.body, 'done')
        run: |
          echo "Setting issue status to Done..."
          gh project item-edit \
            --id ${{ needs.retrieve-issue-details.outputs.ISSUE_ITEM_ID }} \
            --field-id ${{ needs.retrieve-issue-details.outputs.STATUS_FIELD_ID }} \
            --project-id ${{ needs.retrieve-issue-details.outputs.PROJECT_GLOBAL_ID }} \
            --single-select-option-id ${{ needs.retrieve-issue-details.outputs.DONE_OPTION_ID }}
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
