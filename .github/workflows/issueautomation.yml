name: Manage Issues
on:
  issue_comment:
    types: [created]

jobs:
  initialize-and-get-data:
    runs-on: ubuntu-latest
    outputs:
      ISSUE_ID: ${{ steps.extract_issue_id.outputs.ISSUE_ID }}
      PROJECT_ID: ${{ steps.extract_project_id.outputs.PROJECT_ID }}
      FIELD_ID: ${{ steps.extract_field_id.outputs.FIELD_ID }}
      OPTION_ID_PROGRESS: ${{ steps.extract_option_progress.outputs.OPTION_ID }}
      OPTION_ID_COMPLETE: ${{ steps.extract_option_complete.outputs.OPTION_ID }}
    steps:
      - name: Pull Repository
        uses: actions/checkout@v2

      - name: Authenticate via GitHub CLI
        run: echo "${{ secrets.GH_TOKEN }}" | gh auth login --with-token

      - name: Verify Authentication
        run: gh auth status

      - name: Retrieve Project Data
        id: extract_project_details
        run: |
          PROJECT_NUM=$(gh project list --format json | jq -r '.projects[] | select(.title=="test workflow") | .number')
          PROJECT_ID=$(gh project list --format json | jq -r '.projects[] | select(.title=="test workflow") | .id')
          echo "PROJECT_NUM=${PROJECT_NUM}" >> $GITHUB_ENV
          echo "PROJECT_ID=${PROJECT_ID}" >> $GITHUB_ENV
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: Retrieve Issue Data
        id: extract_issue_details
        run: |
          ISSUE_ID=$(gh project item-list ${{ env.PROJECT_NUM }} --owner '@me' --format json | jq -r '.items[] | select(.content.number==${{ github.event.issue.number }}) | .id')
          echo "ISSUE_ID=${ISSUE_ID}" >> $GITHUB_ENV
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: Retrieve Field and Status Options
        id: extract_field_and_options
        run: |
          FIELD_ID=$(gh project field-list ${{ env.PROJECT_NUM }} --owner "@me" --format json | jq -r '.fields[] | select(.name=="Status") | .id')
          OPTION_ID_PROGRESS=$(gh project field-list ${{ env.PROJECT_NUM }} --owner "@me" --format json | jq -r '.fields[] | select(.name=="Status") | .options[] | select(.name=="In progress") | .id')
          OPTION_ID_COMPLETE=$(gh project field-list ${{ env.PROJECT_NUM }} --owner "@me" --format json | jq -r '.fields[] | select(.name=="Status") | .options[] | select(.name=="Done") | .id')
          echo "FIELD_ID=${FIELD_ID}" >> $GITHUB_ENV
          echo "OPTION_ID_PROGRESS=${OPTION_ID_PROGRESS}" >> $GITHUB_ENV
          echo "OPTION_ID_COMPLETE=${OPTION_ID_COMPLETE}" >> $GITHUB_ENV
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: Output Variables
        id: output_variables
        run: |
          echo "ISSUE_ID=${{ env.ISSUE_ID }}" >> $GITHUB_OUTPUT
          echo "PROJECT_ID=${{ env.PROJECT_ID }}" >> $GITHUB_OUTPUT
          echo "FIELD_ID=${{ env.FIELD_ID }}" >> $GITHUB_OUTPUT
          echo "OPTION_ID_PROGRESS=${{ env.OPTION_ID_PROGRESS }}" >> $GITHUB_OUTPUT
          echo "OPTION_ID_COMPLETE=${{ env.OPTION_ID_COMPLETE }}" >> $GITHUB_OUTPUT

  update-issue-status:
    runs-on: ubuntu-latest
    needs: initialize-and-get-data
    steps:
      - name: Pull Repository
        uses: actions/checkout@v2

      - name: Update Issue to In Progress
        if: contains(github.event.comment.body, 'progress')
        run: |
          echo "Setting issue status to In Progress..."
          gh project item-edit \
            --id ${{ needs.initialize-and-get-data.outputs.ISSUE_ID }} \
            --field-id ${{ needs.initialize-and-get-data.outputs.FIELD_ID }} \
            --project-id ${{ needs.initialize-and-get-data.outputs.PROJECT_ID }} \
            --single-select-option-id ${{ needs.initialize-and-get-data.outputs.OPTION_ID_PROGRESS }}
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: Update Issue to Done
        if: contains(github.event.comment.body, 'done')
        run: |
          echo "Setting issue status to Done..."
          gh project item-edit \
            --id ${{ needs.initialize-and-get-data.outputs.ISSUE_ID }} \
            --field-id ${{ needs.initialize-and-get-data.outputs.FIELD_ID }} \
            --project-id ${{ needs.initialize-and-get-data.outputs.PROJECT_ID }} \
            --single-select-option-id ${{ needs.initialize-and-get-data.outputs.OPTION_ID_COMPLETE }}
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
